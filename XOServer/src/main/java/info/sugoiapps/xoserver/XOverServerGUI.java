
package info.sugoiapps.xoserver;

import java.awt.datatransfer.UnsupportedFlavorException;
import java.awt.datatransfer.DataFlavor;
import java.awt.dnd.DropTargetDragEvent;
import java.awt.dnd.DropTargetDropEvent;
import java.awt.dnd.DropTargetListener;
import java.awt.dnd.DropTargetEvent;
import java.awt.event.MouseAdapter;
import javax.swing.TransferHandler;
import java.awt.event.MouseEvent;
import java.awt.dnd.DnDConstants;
import javax.swing.JOptionPane;
import javax.swing.SwingWorker;
import java.awt.dnd.DropTarget;
import javax.swing.JComponent;
import java.io.IOException;
import java.io.File;

/**
 * 
 * @author Daniel Munkacsi
 */
public class XOverServerGUI extends javax.swing.JFrame {
    
    private static final String MULTI_DRAG_ERROR = "You dragged more than one image into the app. Currently you can only upload one image at a time.";
    private static final String START = "Start";
    private static final String STOP = "Stop";
    private static int status = 0;

    /**
     * Create new form GUI.
     */
    public XOverServerGUI() {
        super("XOverServer");
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(XOverServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(XOverServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(XOverServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(XOverServerGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        initComponents();
        enableDragAndDrop();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        connBtn = new javax.swing.JButton();
        statusField = new javax.swing.JTextField();
        dropLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(275, 200));
        setMinimumSize(new java.awt.Dimension(275, 200));
        setResizable(false);

        connBtn.setText("Start");
        connBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                connBtnActionPerformed(evt);
            }
        });

        statusField.setEditable(false);

        dropLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dropLabel.setTransferHandler(new TransferHandler("image"));
        dropLabel.setText("DROP YOUR FILE HERE");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(connBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(statusField)
                .addContainerGap())
            .addComponent(dropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 275, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(connBtn)
                    .addComponent(statusField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dropLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE))
        );

        dropLabel.addMouseListener(new MouseAdapter(){
            public void mousePressed(MouseEvent evt){
                JComponent comp = (JComponent) evt.getSource();
                TransferHandler th = comp.getTransferHandler();
                th.exportAsDrag(comp,evt,TransferHandler.COPY);
            }

        });

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private static XOverServer xo = null;
    private void connBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_connBtnActionPerformed
        if(status == 0){
            xo = new XOverServer(statusField);
            xo.execute();
            status = 1;
            connBtn.setText(STOP);
        }else if(status == 1){
            xo.cancel(true);
            xo = null;
            connBtn.setText(START);
            status = 0;
        }
    }//GEN-LAST:event_connBtnActionPerformed

    /**
     * Enable drag and drop feature.
     */
    private void enableDragAndDrop(){
        DropTarget target;
        target = new DropTarget(dropLabel,new DropTargetListener(){
            // <editor-fold defaultstate="collapsed" desc=" unwanted implemented methods ">
            @Override
            public void dragEnter(DropTargetDragEvent e) {
            }
            
            @Override
            public void dragExit(DropTargetEvent e) {
            }
            
            @Override
            public void dragOver(DropTargetDragEvent e) {
            }
            
            @Override
            public void dropActionChanged(DropTargetDragEvent e) {
                
            }

// </editor-fold>
            public void drop(DropTargetDropEvent e){
                try{
                    // Accept drop
                    e.acceptDrop(DnDConstants.ACTION_COPY_OR_MOVE);
                    System.out.println("Drag-n-drop detected.");
                    // Get files that are dropped as java.util.List
                    java.util.List list=(java.util.List) e.getTransferable().getTransferData(DataFlavor.javaFileListFlavor);
                    if(list.size() > 1){JOptionPane.showMessageDialog(null,MULTI_DRAG_ERROR, "Error", JOptionPane.ERROR_MESSAGE); System.out.println(MULTI_DRAG_ERROR); return;}
                    // Get the first file from the list,
                    System.out.println("Reading dropped file...");
                    final File file=(File)list.get(0);
                    System.out.println(file.getCanonicalPath());
                    ////
                    SwingWorker uploader = new SwingWorker<Void,Void>(){
                        @Override
                        protected Void doInBackground() {
                            try {
                                xo.getFileClient().sendFile(file);
                            } catch (IOException ex) {
                                ex.printStackTrace();
                            }
                            return null;
                        }
                    };
                    uploader.execute();
                    ////
                    System.out.println("File accepted, proceeding to upload...");
                }catch(UnsupportedFlavorException | IOException ex){
                    System.out.println("Filetype not supported.");
                }
            }
        });
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new XOverServerGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton connBtn;
    private javax.swing.JLabel dropLabel;
    private javax.swing.JTextField statusField;
    // End of variables declaration//GEN-END:variables
}
